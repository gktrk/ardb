<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

<xsl:output method="html" encoding="iso-8859-1"/> 
<xsl:template match="/">

<html> <!-- xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" > -->
  <head>
    <style type="text/css">

      body
      {
      background: #000000;
      color: #AAAAAA;
      margin: 0
      }

      div#crypt
      {
      background: #000000;
      }

      div#info
      {
      background: #331111;
      width: 100%;
      }

      div#library
      {
      background: #000000;
      }

      h1
      {
      font-size: x-large;
      margin-left: 1cm
      }

      h2
      {
      font-size: large;
      margin-left: 1cm
      }

      h3
      {
      font-size: large;
      border-bottom: solid;
      border-width: 2px;
      }

      h4
      {
      font-size: medium;
      margin-bottom: 0px
      }

      table
      {
      line-height: 70%
      }

      .generator
      {
      color: #555555;
      position: relative;
      top: 20px;
      }

      .taunt
      {
      color: #111111;
      position: relative;
      top: 20px;
      }

      .librarytype
      {
      
      }

      .stats
      {
      color: #777777;
      margin: 5px;
      }

      .tablevalue
      {
      color: #aaaa88;
      margin: 5px
      }
 
      .value 
      { 
      color: #aaaa88
      }
 
      hr {color: sienna}
 
      p {margin-left: 60px}

      a
      {
      color: #aaaa88;
      margin: 5px;
      text-decoration: none
      }

      a:hover
      {
      color: #ffffff;
      margin: 5px;
      text-decoration: none
      }
    </style>
    <title>VTES Inventory of cards</title>
  </head>
  <body>
    <div id="info">
      <h1 id="nametitle"><span>Inventory</span></h1>
    </div>

    <div id="crypt">
      <h3 id="crypttitle"><span>Vampires </span><span class="stats"
      id="cryptstats">[<xsl:value-of select="inventory/crypt/@size"/>]
      </span></h3>

      <div class="crypttable" id="crypttable">
        <table><tbody>
        <xsl:for-each select="/inventory/crypt/vampire">
          <xsl:sort select="name"/>
              <tr>
                <td><span class="tablevalue"><xsl:call-template name="count-vampires"><xsl:with-param name="myname" select="string(name)" /><xsl:with-param name="myadv" select="string(adv)" /></xsl:call-template></span></td>
                <td><span class="tablevalue"><a><xsl:attribute name='href'>http://monger.vekn.org/showvamp.html?NAME=<xsl:value-of select="name"/><xsl:if test="adv!=''">  ADV</xsl:if></xsl:attribute><xsl:value-of select="name"/><xsl:if test="adv!=''">  ADV</xsl:if></a></span></td>
	      </tr>
        </xsl:for-each>
      </tbody></table>
      </div>
    </div>




    <div id="library">
      <h3 id="librarytitle"><span>Cards </span><span class="stats"
      id="librarystats">[<xsl:value-of select="inventory/library/@size"/>]
      </span></h3>

      <div class="librarytable" id="librarytable">
        <table><tbody>
        <xsl:for-each select="/inventory/library/card">
          <xsl:sort select="name"/>
              <tr>
                <td><span class="tablevalue"><xsl:call-template name="count-cards"><xsl:with-param name="myname" select="string(name)" /><xsl:with-param name="myadv" select="string(adv)" /></xsl:call-template></span></td>
                <td><span class="tablevalue"><a><xsl:attribute name='href'>http://monger.vekn.org/showvamp.html?NAME=<xsl:value-of select="name"/></xsl:attribute><xsl:value-of select="name"/></a></span></td>
	      </tr>
        </xsl:for-each>
      </tbody></table>
      </div>
    </div>


    <div><span class="generator">Generated by : <xsl:value-of
    select="//inventory/@generator"/><xsl:text>. [</xsl:text><xsl:value-of select="//inventory/date"/><xsl:text>]</xsl:text></span><span class="taunt"> - Think you can make a better
    stylesheet ? Then do it boy !</span>
    </div>

  </body>
  </html>
</xsl:template>

<xsl:template name="count-vampires">
  <xsl:param name="myname"/>
  <xsl:param name="myadv"/>
  have:<xsl:value-of select="@have"/>
  need:<xsl:value-of select="@need"/>
  spare:<xsl:value-of select="@spare"/>
</xsl:template>

<xsl:template name="count-cards">
  <xsl:param name="myname"/>
  have:<xsl:value-of select="@have"/>
  need:<xsl:value-of select="@need"/>
  spare:<xsl:value-of select="@spare"/>
</xsl:template>

</xsl:stylesheet>
